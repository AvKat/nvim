global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
def create_matrix_placeholders(snip):
	anon_snippet_body = ""
	start = snip.snippet_start[0]
	end = snip.snippet_end[0]
	for i in range(start, end + 1):
		anon_snippet_body += snip.buffer[i]
		anon_snippet_body += "" if i == end else "\n"
	for i in range(start, end):
		del snip.buffer[start]
	snip.buffer[start] = ''
	snip.expand_anon(anon_snippet_body)

def create_matrix(cols, rows, sep, end, full):
	start = "\t"
	res = ""
	placeholder = 1
	for _ in range(0, int(rows)):
		res += start + f"\t${placeholder} "
		placeholder += 1
		for _ in range(0, int(cols) - 1):
			res += sep + f" ${placeholder} "
			placeholder += 1
		res += end
	return res[:-1]
endglobal

post_jump "create_matrix_placeholders(snip)"
snippet 'bmat(\d+)x(\d+)' "LaTeX array" r
\begin{bmatrix}
`!p snip.rv = create_matrix(match.group(1), match.group(2), "&", "\\\\\\\n", match.group(0))`
\end{bmatrix}
endsnippet

context "math()"
post_jump "create_matrix_placeholders(snip)"
snippet 'pmat(\d+)x(\d+)' "LaTeX array" r
\begin{pmatrix}
`!p snip.rv = create_matrix(match.group(1), match.group(2), "&", "\\\\\\\n", match.group(0))`
\end{pmatrix}
endsnippet

snippet template "Template" b
\documentclass[letterpaper,12pt]{extarticle}
\usepackage{geometry}
\usepackage{titling}
\usepackage{amsmath,amssymb,amsthm}
\usepackage{enumitem}
\geometry{margin=0.8in}
\title{$1}
\date{}
\author{}

\pretitle{\begin{center}\huge\sffamily}
\posttitle{\end{center}\normalsize }
\preauthor{}
\postauthor{}
\predate{}
\postdate{}

\newcommand{\emp}{\vspace{20px}\noindent}
\newcommand{\hdate}[1]{\noindent{\Large\bf\underline{#1}}}
\newcommand{\spn}[1]{\text{span}(#1)}

\begin{document}
\maketitle
\noindent
$2
\end{document}
endsnippet


snippet colorconf "Color Configuration" b
\usepackage{tcolorbox}
\usepackage{xcolor}
\definecolor{black}{RGB}{0,0,0}
\definecolor{peach}{RGB}{255, 207, 210} %propositions
\definecolor{peachborder}{RGB}{225, 177, 180} %propbox
%{60, 255, 56}
\definecolor{lilac}{RGB}{241, 192, 232} %proofs
\definecolor{lilacborder}{RGB}{221, 172, 212} %proofbox
%{217, 73, 227}
\definecolor{lilac-2}{RGB}{207, 186, 240}  %theorems
\definecolor{lilac2border}{RGB}{187, 166, 220} %thmbox
%{219, 227, 0}
\definecolor{niceblue}{RGB}{142, 236, 245} %definitions
\definecolor{blueborder}{RGB}{122, 216, 225} %defnbox
%{18, 139, 199}
\definecolor{turquoise}{RGB}{152, 245, 225}
\definecolor{turquoiseborder}{RGB}{132, 225, 205}
\definecolor{sage}{RGB}{185, 251, 192}
\definecolor{sageborder}{RGB}{165, 231, 172}
\newtcolorbox{prop}{colback=lilac-2,colbacktitle=lilac2border,colborder = black,coltitle=black,title=Proposition.}
\newtcolorbox{prf}{colback=turquoise,colbacktitle=turquoiseborder,colframe=black,coltitle=black,title=Proof.}
\newtcolorbox{thm}{colback=sage,colframe=black,colbacktitle=sageborder,coltitle=black,title=Theorem.}
\newtcolorbox{defn}{colback=lilac,colbacktitle=lilacborder,colframe-black,coltitle=black,title=Definition}
\newtcolorbox{ex}{colback=niceblue,colbacktitle=blueborder,colframe-black,coltitle=black,title=Example}
\newtcolorbox{corollary}{colback=peach,colbacktitle=peachborder,colframe=black,coltitle=black,title=Corollary}
endsnippet

snippet begend "begin{} / end{}" A
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet lms "limits" iA
\lim\limits_{$0}
endsnippet

snippet lmninf "limit n to infinity" iA
\lim\limits_{n \to \infty} $0
endsnippet

snippet lmxinf "limit x to infinity" iA
\lim\limits_{x \to \infty} $0
endsnippet


snippet gath "Gather" bA
\begin{gather*}
	${1:${VISUAL}}
\end{gather*}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet blts "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet matmnf "Matrix over F" wA
M_{m \times n}(\mathbb{F})
endsnippet


snippet matsqf "Square matrix over F" wA
M_n(\mathbb{F})
endsnippet


snippet odbas "Ordered Basis" wA
[$1]_{\mathcal{B}\mathcal{A}} $0
endsnippet

snippet lsn "List Inline" wA
\lstinline{$1} $0
endsnippet

snippet uline "Underline" wA
\underline{$1} $0
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
	${1:${VISUAL}}
\]
endsnippet

snippet dpstyle "Display Style" wA
$\displaystyle ${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

context "math()"
priority 10
snippet "bbb" "Mathbb" riA
\mathbb{$1}$0
endsnippet

context "math()"
priority 10
snippet "\.\.\." "Mathbb" riA
\ldots$0
endsnippet

context "math()"
priority 10
snippet "ccc" "MathCal" riA
\mathcal{$1}$0
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

snippet -- "List item" bA
\item$0
endsnippet
